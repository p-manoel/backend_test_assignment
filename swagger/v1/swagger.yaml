{
  "openapi": "3.0.1",
  "info": {
    "title": "Cars API V1",
    "version": "v1",
    "description": "API for car recommendations with user preferences"
  },
  "servers": [
    {
      "url": "http://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "localhost:3000"
        }
      }
    }
  ],
  "paths": {
    "/api/v1/cars": {
      "get": {
        "summary": "Lists cars",
        "tags": [
          "Cars"
        ],
        "description": "Returns a list of cars sorted by match quality and recommendations",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "description": "ID of the user to get preferences and recommendations",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "description": "Filter cars by brand name (case insensitive)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price_min",
            "in": "query",
            "required": false,
            "description": "Minimum price filter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "price_max",
            "in": "query",
            "required": false,
            "description": "Maximum price filter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number (defaults to 1)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cars found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cars": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/car"
                      }
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "cars",
                    "total_count",
                    "page"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "brand": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "label": {
            "type": "string",
            "enum": [
              "perfect_match",
              "good_match",
              null
            ],
            "nullable": true,
            "description": "Match level based on user preferences"
          }
        },
        "required": [
          "id",
          "brand",
          "model",
          "price"
        ]
      },
      "error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}